'use strict';

const https = require('https');
const consts = require('../consts');
const TwitchStream = require('./stream');
const EventEmitter = require('events');

class TwitchStreamMonitor extends EventEmitter {
    /**
     * @param {TwitchStream} stream
     */
    constructor(stream) {
        if (stream == null)
            throw new Error("The stream argument is required.");
        else if (!(stream instanceof TwitchStream))
            throw new Error("Provided stream argument is not a TwitchStream instance.");
        super();

        this.stream = stream;
    }

    /**
     * @param {int?} interval
     */
    watch(interval) {
        if (this._interval) return;
        if (!interval) interval = 30000;
        let $ = this;
        let online = false;
        this._interval = setInterval(function () {
            $.stream.streams(function (err, result) {
                if (result.stream && !online) {
                    online = true;
                    $.emit('online', result.stream);
                } else if (!result.stream && online) {
                    online = false;
                    $.emit('offline', null);
                }
            });
        }, interval);
    }

    unwatch() {
        if (!this._interval) return;
        clearInterval(this._interval);
        delete this._interval;
    }
}

module.exports = TwitchStreamMonitor;