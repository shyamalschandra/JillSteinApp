{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import url from 'url';\nimport https from 'https';\nimport querystring from 'querystring';\nimport { posix as path } from 'path';\nimport once from 'event-promise';\nimport concat from 'stream-concat-promise';\nimport delay from 'timeout-as-promise';\nimport strto from 'strto';\nimport * as httpAuth from './http-auth.js';\n\nconst default_agent = () => new (https.Agent)({ keepAlive: true, maxSockets: 1 });\n\nclass Auth {\n  client_id = null;\n  client_secret = null;\n  refresh_token = null;\n\n  _session = null;\n  _promise_for_token = null;\n\n  // How close to its scheduled expiration do we continue to use a token?\n  static token_expiry_margin = 10;\n\n  constructor(session, client_id, client_secret, refresh_token) {\n    this._session = session;\n    this.client_id = client_id;\n    this.client_secret = client_secret;\n    this.refresh_token = refresh_token;\n  }\n\n  get_token() {\n    if (this._promise_for_token === null) {\n      this._promise_for_token = this._request_token().then(token => {\n\n        /* Throw out the token later */\n        (async () => {\n          await delay(1000*(token.expires_in - Auth.token_expiry_margin));\n          await this._discard_token();\n          console.log('Successfully discarded access token.');\n        })().catch(function(err) {\n          console.error('Failed to discard access token!');\n          console.error(err.toString());\n        });\n\n        return token.access_token;\n      });\n    }\n    return this._promise_for_token;\n  }\n\n  async _request_token() {\n    let [ status_code, headers, res_body ] = await this._session._request_base(\n        'POST', 'www.reddit.com', '/api/v1/access_token', undefined,\n        { 'Authorization': httpAuth.basic(this.client_id, this.client_secret) },\n        { grant_type: 'refresh_token', refresh_token: this.refresh_token }, undefined);\n\n    if (status_code != 200) {\n      throw new HTTPError(status_code, res_body);\n    }\n\n    return JSON.parse(res_body);\n  }\n\n  async _discard_token() {\n    if (this._promise_for_token === null) {\n      return;\n    }\n    let token = await this._promise_for_token;\n    this._promise_for_token = null;\n\n    let [ status_code, headers, res_body ] = await this._session._request_base(\n        'POST', 'www.reddit.com', '/api/v1/revoke_token', undefined,\n        { 'Authorization': httpAuth.basic(this.client_id, this.client_secret) },\n        { token, token_type_hint: 'access_token' }, undefined);\n\n    if (status_code != 204) {\n      throw new HTTPError(status_code, res_body);\n    }\n  }\n\n  close() {\n    return _discard_token();\n  }\n}\n\nexport class Session {\n  _agent = null;\n  user_agent = null;\n  _auth = null;\n  _ratelimit_ready = null;\n  constructor({ http_agent = default_agent(), user_agent, auth }) {\n    let self = this;\n\n    this._agent = http_agent;\n    this.user_agent = user_agent;\n\n    this._auth = new Auth(this, auth.client_id, auth.client_secret, auth.refresh_token);\n  }\n\n  async _request_base(method, host, pathname, query, headers, body, progress_cb) {\n    let final_progress_cb = progress_cb || (() => undefined);\n\n    let final_headers = {\n      'Host': host,\n      'User-Agent': this.user_agent,\n      ...headers\n    };\n\n    let hasBody = ['POST', 'PUT', 'PATCH'].includes(method);\n\n    if (hasBody) {\n      if (!Buffer.isBuffer(body)) {\n        body = new Buffer(querystring.stringify({\n          api_type: 'json',\n          ...body\n        }));\n        final_headers['Content-Type'] = 'application/x-www-form-urlencoded';\n      }\n      final_headers['Content-Length'] = body.length;\n    }\n\n    query = {\n      'raw_json': '1',\n      ...query\n    };\n\n    let req = https.request({\n      agent: this._agent,\n      method,\n      host,\n      path: url.format({ pathname, query }),\n      headers: final_headers\n    });\n    req.end(body);\n\n    let response = await once(req, 'response'),\n        resBody = await concat(response);\n\n    if ([502, 503, 504, 522].includes(response.statusCode)) {\n      return this._request_base(method, host, pathname, query, headers, body, progress_cb);\n    }\n\n    return [response.statusCode, response.headers, resBody];\n  }\n\n  async request({ method = 'GET', pathname, query = {}, headers = {}, body }, progress_cb) {\n    await this._ratelimit_ready;\n\n    let final_headers = {\n      'Authorization': httpAuth.bearer(await this._auth.get_token()),\n      ...headers\n    };\n\n    let [statusCode, resHeaders, resBody] =\n        await this._request_base(method, 'oauth.reddit.com', pathname, query,\n            final_headers, body, progress_cb);\n\n    let ratelimit_remaining = Math.trunc(strto.finitefloat(resHeaders['x-ratelimit-remaining'], -1)),\n        ratelimit_reset = Math.trunc(strto.finitefloat(resHeaders['x-ratelimit-reset'], -1));\n\n    if (ratelimit_remaining < 0 || ratelimit_reset < 0) {\n      throw new TypeError('Failed to read ratelimit information');\n    }\n\n    if (ratelimit_remaining === 0) {\n      this._ratelimit_ready = delay(1000 * ratelimit_reset);\n    }\n\n    return JSON.parse(resBody);\n  }\n\n  close() {\n    return this._auth.close();\n  }\n}\n\nexport class HTTPError extends Error {\n  constructor(status, message) {\n    super(`${status}: ${message}`);\n  }\n}\n"],"sourceRoot":"/source/"}