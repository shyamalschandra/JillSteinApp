{"version":3,"sources":["../../src/libs/fetch.js"],"names":[],"mappings":"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","file":"fetch.js","sourcesContent":["import request from 'superagent';\n\nexport default function fetch(url, opts = {}) {\n  return new Promise((resolve, reject) => {\n    if (typeof opts.body === 'object' || opts.json) {\n      opts.headers = Object.assign({'Content-Type': 'application/json'}, opts.headers || {});\n    }\n\n    const method = opts.method || 'get';\n    let req = request[method.toLowerCase()](url);\n\n    req = req.query(opts.query);\n\n    if (opts.method === 'get') {\n      req = req.query(opts.body);\n    } else {\n      req = req.send(opts.body);\n    }\n\n    if (opts.credentials) {\n      req = req.withCredentials();\n    }\n\n    if (opts.headers) {\n      for (const [k, v] of Object.entries(opts.headers)) {\n        req = req.set(k, v);\n      }\n    }\n\n    req.end((err, res) => {\n      if (err) {\n        try {\n          if (err.response && err.response.error) {\n            err = err.response.error;\n          } else if (res.error) {\n            err = res.error;\n          }\n\n          const {status, method: _method, path, text} = err;\n\n          Object.defineProperty(err, 'res', {value: res, enumerable: false, configurable: false});\n          Object.defineProperty(err, 'status', {value: status, enumerable: false, configurable: false});\n          Object.defineProperty(err, 'method', {value: _method, enumerable: false, configurable: false});\n          Object.defineProperty(err, 'path', {value: path, enumerable: false, configurable: false});\n          Object.defineProperty(err, 'text', {value: text, enumerable: false, configurable: false});\n        } catch (e) {\n          try {\n            Object.defineProperty(err, 'res', {value: res, enumerable: false, configurable: false});\n          } catch (ee) {\n            // fallback for crappy browsers\n            err.res = res;\n          }\n        }\n\n        reject(err);\n      } else {\n        if ((opts.json || /\\/json/g.test(res.headers['Content-Type'])) && res.text) {\n          try {\n            res.body = JSON.parse(res.text.trim());\n          } catch (e) {\n            // ignore\n          }\n        }\n\n        resolve(res);\n      }\n    });\n  });\n}\n"]}