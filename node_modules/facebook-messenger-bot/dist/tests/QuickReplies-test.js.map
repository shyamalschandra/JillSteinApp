{"version":3,"sources":["../../src/tests/QuickReplies-test.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AAGA,SAAS,cAAT,EAAyB,YAAM;AAC7B,KAAG,SAAH,EAAc,YAAM;AAClB,QAAM,eAAe,oBAArB;AACA,iBAAa,GAAb,CAAiB,EAAC,MAAM,QAAP,EAAiB,MAAM,mBAAvB,EAAjB;AACA,iBAAa,GAAb,CAAiB,EAAC,MAAM,OAAP,EAAgB,MAAM,kBAAtB,EAAjB;AACA,iBAAa,GAAb,CAAiB,EAAC,MAAM,MAAP,EAAe,MAAM,iBAArB,EAAjB;;AAEA,qBAAO,SAAP,CAAiB,CAAC;AAChB,eAAS,8BADO;AAEhB,aAAO,QAFS;AAGhB,oBAAc;AAHE,KAAD,EAId;AACD,eAAS,6BADR;AAED,aAAO,OAFN;AAGD,oBAAc;AAHb,KAJc,EAQd;AACD,eAAS,4BADR;AAED,aAAO,MAFN;AAGD,oBAAc;AAHb,KARc,CAAjB,EAYI,aAAa,MAAb,EAZJ;AAaD,GAnBD;;AAqBA,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAM,eAAe,oBAArB;AACA,mBAAa,GAAb,CAAiB,EAAjB;AACA,uBAAO,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAO,CAAP,EAAU;AACV,uBAAO,EAAP,CAAU,mCAAV;AACD;AACF,GARD;;AAUA,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAM,eAAe,oBAArB;AACA,mBAAa,GAAb,CAAiB,EAAC,OAAO,cAAR,EAAjB;AACA,uBAAO,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAO,CAAP,EAAU;AACV,uBAAO,EAAP,CAAU,mCAAV;AACD;AACF,GARD;AASD,CAzCD","file":"QuickReplies-test.js","sourcesContent":["import assert from 'assert';\nimport {QuickReplies} from '../..';\n\n\ndescribe('QuickReplies', () => {\n  it('#toJSON', () => {\n    const quickReplies = new QuickReplies();\n    quickReplies.add({text: 'Google', data: 'http://google.com'});\n    quickReplies.add({text: 'Yahoo', data: 'http://yahoo.com'});\n    quickReplies.add({text: 'Bing', data: 'http://bing.com'});\n\n    assert.deepEqual([{\n      payload: '{\"data\":\"http://google.com\"}',\n      title: 'Google',\n      content_type: 'text'\n    }, {\n      payload: '{\"data\":\"http://yahoo.com\"}',\n      title: 'Yahoo',\n      content_type: 'text'\n    }, {\n      payload: '{\"data\":\"http://bing.com\"}',\n      title: 'Bing',\n      content_type: 'text'\n    }], quickReplies.toJSON());\n  });\n\n  it('should throw an error', () => {\n    try {\n      const quickReplies = new QuickReplies();\n      quickReplies.add({});\n      assert.fail('should have thrown an error');\n    } catch (e) {\n      assert.ok('does not have data/url attributes');\n    }\n  });\n\n  it('should throw an error', () => {\n    try {\n      const quickReplies = new QuickReplies();\n      quickReplies.add({event: 'simple-event'});\n      assert.fail('should have thrown an error');\n    } catch (e) {\n      assert.ok('does not have data/url attributes');\n    }\n  });\n});\n"]}