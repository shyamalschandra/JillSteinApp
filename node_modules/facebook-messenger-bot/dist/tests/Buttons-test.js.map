{"version":3,"sources":["../../src/tests/Buttons-test.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AAGA,SAAS,SAAT,EAAoB,YAAM;AACxB,KAAG,SAAH,EAAc,YAAM;AAClB,QAAM,UAAU,eAAhB;AACA,YAAQ,GAAR,CAAY,EAAC,MAAM,QAAP,EAAiB,KAAK,mBAAtB,EAAZ;AACA,YAAQ,GAAR,CAAY,EAAC,MAAM,OAAP,EAAgB,KAAK,kBAArB,EAAZ;AACA,YAAQ,GAAR,CAAY,EAAC,MAAM,MAAP,EAAe,KAAK,iBAApB,EAAZ;;AAEA,qBAAO,SAAP,CAAiB,CACf,EAAC,MAAM,SAAP,EAAkB,KAAK,mBAAvB,EAA4C,OAAO,QAAnD,EADe,EAEf,EAAC,MAAM,SAAP,EAAkB,KAAK,kBAAvB,EAA2C,OAAO,OAAlD,EAFe,EAGf,EAAC,MAAM,SAAP,EAAkB,KAAK,iBAAvB,EAA0C,OAAO,MAAjD,EAHe,CAAjB,EAIG,QAAQ,MAAR,EAJH;AAKD,GAXD;;AAaA,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAM,UAAU,eAAhB;AACA,cAAQ,GAAR,CAAY,EAAZ;AACA,uBAAO,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAO,CAAP,EAAU;AACV,uBAAO,EAAP,CAAU,mCAAV;AACD;AACF,GARD;;AAUA,KAAG,qBAAH,EAA0B,YAAM;AAC9B,QAAI;AACF,gBAAQ,IAAR,CAAa,CAAC,EAAC,MAAM,EAAP,EAAW,MAAM,KAAjB,EAAD,EAA0B,EAAC,MAAM,EAAP,EAAW,MAAM,KAAjB,EAA1B,CAAb;AACA,uBAAO,EAAP,CAAU,kBAAV;AACD,KAHD,CAGE,OAAO,CAAP,EAAU;AACV,uBAAO,IAAP,CAAY,6BAAZ;AACD;AACF,GAPD;;AAUA,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAM,UAAU,eAAhB;AACA,cAAQ,GAAR,CAAY,EAAC,OAAO,cAAR,EAAZ;AACA,uBAAO,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAO,CAAP,EAAU;AACV,uBAAO,EAAP,CAAU,mCAAV;AACD;AACF,GARD;AASD,CA3CD","file":"Buttons-test.js","sourcesContent":["import assert from 'assert';\nimport {Buttons} from '../..';\n\n\ndescribe('Buttons', () => {\n  it('#toJSON', () => {\n    const buttons = new Buttons();\n    buttons.add({text: 'Google', url: 'http://google.com'});\n    buttons.add({text: 'Yahoo', url: 'http://yahoo.com'});\n    buttons.add({text: 'Bing', url: 'http://bing.com'});\n\n    assert.deepEqual([\n      {type: 'web_url', url: 'http://google.com', title: 'Google'},\n      {type: 'web_url', url: 'http://yahoo.com', title: 'Yahoo'},\n      {type: 'web_url', url: 'http://bing.com', title: 'Bing'}\n    ], buttons.toJSON());\n  });\n\n  it('should throw an error', () => {\n    try {\n      const buttons = new Buttons();\n      buttons.add({});\n      assert.fail('should have thrown an error');\n    } catch (e) {\n      assert.ok('does not have data/url attributes');\n    }\n  });\n\n  it('should parse object', () => {\n    try {\n      Buttons.from([{data: [], text: 'sup'}, {data: [], text: 'cat'}]);\n      assert.ok('parsed correctly');\n    } catch (e) {\n      assert.fail('should have thrown an error');\n    }\n  });\n\n\n  it('should throw an error', () => {\n    try {\n      const buttons = new Buttons();\n      buttons.add({event: 'simple-event'});\n      assert.fail('should have thrown an error');\n    } catch (e) {\n      assert.ok('does not have data/url attributes');\n    }\n  });\n});\n"]}